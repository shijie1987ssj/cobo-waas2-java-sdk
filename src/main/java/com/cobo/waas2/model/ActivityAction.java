/*
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cobo.waas2.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The specific action taken within an activity. Possible values include: - &#x60;Submitted&#x60;: Submit the staking, unstaking, or withdrawal request. - &#x60;BTCConfirmation&#x60;: The Bitcoin chain confirms the request. - &#x60;BabylonConfirmation&#x60;: The Babylon protocol confirms the request. - &#x60;DepositETH&#x60;: Deposit ETH to the validator to start staking. - &#x60;ClaimRewards&#x60;: Claim the rewards from the validator. - &#x60;ActivateValidator&#x60;: Activate the validator to start staking. - &#x60;UnstakeETH&#x60;: Unstake ETH from the validator. - &#x60;ApproveUSDC&#x60;: Approve the USDC token to be used for staking. - &#x60;ConvertToUSDS&#x60;: Convert the USDC token to the USDS token. - &#x60;ApproveUSDS&#x60;: Approve the USDS token to be used for staking. - &#x60;DepositUSDS&#x60;: Deposit the USDS token to the validator. - &#x60;WithdrawUSDS&#x60;: Withdraw the USDS token from the validator. - &#x60;ConvertToUSDC&#x60;: Convert the USDS token to the USDC token. 
 */
@JsonAdapter(ActivityAction.Adapter.class)
public enum ActivityAction {
  UNKNOWN(null),
  
  SUBMITTED("Submitted"),
  
  BTCCONFIRMATION("BTCConfirmation"),
  
  BABYLONCONFIRMATION("BabylonConfirmation"),
  
  DEPOSITETH("DepositETH"),
  
  CLAIMREWARDS("ClaimRewards"),
  
  ACTIVATEVALIDATOR("ActivateValidator"),
  
  UNSTAKEETH("UnstakeETH"),
  
  APPROVEUSDC("ApproveUSDC"),
  
  CONVERTTOUSDS("ConvertToUSDS"),
  
  APPROVEUSDS("ApproveUSDS"),
  
  DEPOSITUSDS("DepositUSDS"),
  
  WITHDRAWUSDS("WithdrawUSDS"),
  
  CONVERTTOUSDC("ConvertToUSDC");

  private String value;

  ActivityAction(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ActivityAction fromValue(String value) {
    for (ActivityAction b : ActivityAction.values()) {
      if (b == UNKNOWN) continue;
      if (b.value.equals(value)) {
        return b;
      }
    }
    return UNKNOWN;
    // throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ActivityAction> {
    @Override
    public void write(final JsonWriter jsonWriter, final ActivityAction enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ActivityAction read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ActivityAction.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    ActivityAction.fromValue(value);
  }
}

