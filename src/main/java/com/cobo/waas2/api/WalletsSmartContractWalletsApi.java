/*
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cobo.waas2.api;

import com.cobo.waas2.ApiCallback;
import com.cobo.waas2.ApiClient;
import com.cobo.waas2.ApiException;
import com.cobo.waas2.ApiResponse;
import com.cobo.waas2.Configuration;
import com.cobo.waas2.Pair;
import com.cobo.waas2.ProgressRequestBody;
import com.cobo.waas2.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.cobo.waas2.model.CoboSafeDelegate;
import com.cobo.waas2.model.ErrorResponse;
import com.cobo.waas2.model.SafeWalletDelegates;
import java.util.UUID;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class WalletsSmartContractWalletsApi {
    private ApiClient localVarApiClient;

    public WalletsSmartContractWalletsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public WalletsSmartContractWalletsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for listSafeWalletDelegates
     * @param walletId The wallet ID. (required)
     * @param safeWalletDelegates The request body to query the Delegates of a Safe{Wallet}. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Delegates successfully retrieved. </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Bad request. Your request contains malformed syntax or invalid parameters. </td><td>  -  </td></tr>
        <tr><td> 5XX </td><td> Internal server error. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listSafeWalletDelegatesCall(UUID walletId, SafeWalletDelegates safeWalletDelegates, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = safeWalletDelegates;

        // create path and map variables
        String localVarPath = "/wallets/{wallet_id}/smart_contracts/delegates"
            .replace("{" + "wallet_id" + "}", localVarApiClient.escapeString(walletId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<>();
        Map<String, String> localVarHeaderParams = new HashMap<>();
        Map<String, String> localVarCookieParams = new HashMap<>();
        Map<String, Object> localVarFormParams = new HashMap<>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {};
        return localVarApiClient.buildCall(null, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listSafeWalletDelegatesValidateBeforeCall(UUID walletId, SafeWalletDelegates safeWalletDelegates, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'walletId' is set
        if (walletId == null) {
            throw new ApiException("Missing the required parameter 'walletId' when calling listSafeWalletDelegates(Async)");
        }

        return listSafeWalletDelegatesCall(walletId, safeWalletDelegates, _callback);

    }

    /**
     * List Delegates
     * This operation retrieves all available Delegates of a Safe\\{Wallet\\} for a given transfer or contract call request. 
     * @param walletId The wallet ID. (required)
     * @param safeWalletDelegates The request body to query the Delegates of a Safe{Wallet}. (optional)
     * @return List&lt;CoboSafeDelegate&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Delegates successfully retrieved. </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Bad request. Your request contains malformed syntax or invalid parameters. </td><td>  -  </td></tr>
        <tr><td> 5XX </td><td> Internal server error. </td><td>  -  </td></tr>
     </table>
     */
    public List<CoboSafeDelegate> listSafeWalletDelegates(UUID walletId, SafeWalletDelegates safeWalletDelegates) throws ApiException {
        ApiResponse<List<CoboSafeDelegate>> localVarResp = listSafeWalletDelegatesWithHttpInfo(walletId, safeWalletDelegates);
        return localVarResp.getData();
    }

    /**
     * List Delegates
     * This operation retrieves all available Delegates of a Safe\\{Wallet\\} for a given transfer or contract call request. 
     * @param walletId The wallet ID. (required)
     * @param safeWalletDelegates The request body to query the Delegates of a Safe{Wallet}. (optional)
     * @return ApiResponse&lt;List&lt;CoboSafeDelegate&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Delegates successfully retrieved. </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Bad request. Your request contains malformed syntax or invalid parameters. </td><td>  -  </td></tr>
        <tr><td> 5XX </td><td> Internal server error. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<List<CoboSafeDelegate>> listSafeWalletDelegatesWithHttpInfo(UUID walletId, SafeWalletDelegates safeWalletDelegates) throws ApiException {
        okhttp3.Call localVarCall = listSafeWalletDelegatesValidateBeforeCall(walletId, safeWalletDelegates, null);
        Type localVarReturnType = new TypeToken<List<CoboSafeDelegate>>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List Delegates (asynchronously)
     * This operation retrieves all available Delegates of a Safe\\{Wallet\\} for a given transfer or contract call request. 
     * @param walletId The wallet ID. (required)
     * @param safeWalletDelegates The request body to query the Delegates of a Safe{Wallet}. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Delegates successfully retrieved. </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td> Bad request. Your request contains malformed syntax or invalid parameters. </td><td>  -  </td></tr>
        <tr><td> 5XX </td><td> Internal server error. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listSafeWalletDelegatesAsync(UUID walletId, SafeWalletDelegates safeWalletDelegates, final ApiCallback<List<CoboSafeDelegate>> _callback) throws ApiException {

        okhttp3.Call localVarCall = listSafeWalletDelegatesValidateBeforeCall(walletId, safeWalletDelegates, _callback);
        Type localVarReturnType = new TypeToken<List<CoboSafeDelegate>>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
