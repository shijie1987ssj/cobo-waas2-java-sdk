/*
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cobo.waas2.api;

import com.cobo.waas2.ApiClient;
import com.cobo.waas2.ApiException;
import com.cobo.waas2.Configuration;
import com.cobo.waas2.model.ChangeGuardPubkey200Response;
import com.cobo.waas2.model.CreatePrimeBrokerAddress201Response;
import com.cobo.waas2.model.CreatePrimeBrokerAddressRequest;
import com.cobo.waas2.model.DeleteGuardPubkey201Response;
import com.cobo.waas2.model.ErrorResponse;
import com.cobo.waas2.model.QueryApprovalStatement200Response;
import com.cobo.waas2.model.QueryGuardPubkey200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PrimeBrokerApi
 */
@Disabled
public class PrimeBrokerApiTest {
    ApiClient defaultClient = Configuration.getDefaultApiClient();
    // set custom base url
    {
        defaultClient.setBasePath("https://api.sandbox.cobo.com/v2");
        defaultClient.setPrivKey("<YOUR_API_PRIVATE_KEY_IN_HEX>");
    }
    private final PrimeBrokerApi api = new PrimeBrokerApi();

    /**
     * Change Guard pubkey binding
     *
     * This operation updates an existing binding to associate a broker user ID with a new Cobo Guard public key. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void changeGuardPubkeyTest() throws ApiException {
        String userId = null;
        ChangeGuardPubkey200Response response = api.changeGuardPubkey(userId);
        // TODO: test validations
    }

    /**
     * Create Guard pubkey binding
     *
     * This operation creates a binding between a broker user ID and a Cobo Guard public key.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createGuardPubkeyTest() throws ApiException {
        String userId = null;
        ChangeGuardPubkey200Response response = api.createGuardPubkey(userId);
        // TODO: test validations
    }

    /**
     * Bind addresses to a broker user
     *
     * This operation binds addresses to a broker user. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createPrimeBrokerAddressTest() throws ApiException {
        String userId = null;
        CreatePrimeBrokerAddressRequest createPrimeBrokerAddressRequest = null;
        CreatePrimeBrokerAddress201Response response = api.createPrimeBrokerAddress(userId, createPrimeBrokerAddressRequest);
        // TODO: test validations
    }

    /**
     * Delete Guard pubkey binding
     *
     * This operation deletes a binding between a broker user ID and a Cobo Guard public key. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteGuardPubkeyTest() throws ApiException {
        String userId = null;
        DeleteGuardPubkey201Response response = api.deleteGuardPubkey(userId);
        // TODO: test validations
    }

    /**
     * Query approval statement
     *
     * This operation queries an approval statement. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryApprovalStatementTest() throws ApiException {
        String statementId = null;
        QueryApprovalStatement200Response response = api.queryApprovalStatement(statementId);
        // TODO: test validations
    }

    /**
     * Query a Guard pubkey
     *
     * This operation retrieves the current Cobo Guard public key binding details for a broker user. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryGuardPubkeyTest() throws ApiException {
        String userId = null;
        QueryGuardPubkey200Response response = api.queryGuardPubkey(userId);
        // TODO: test validations
    }

}
