/*
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cobo.waas2.model;

import com.cobo.waas2.model.ExchangeId;
import com.cobo.waas2.model.TransactionDepositToAddressDestination;
import com.cobo.waas2.model.TransactionDepositToAddressDestinationTxInfo;
import com.cobo.waas2.model.TransactionDepositToWalletDestination;
import com.cobo.waas2.model.TransactionDestinationType;
import com.cobo.waas2.model.TransactionEvmCalldataInfo;
import com.cobo.waas2.model.TransactionEvmContractDestination;
import com.cobo.waas2.model.TransactionMessageSignEIP191Destination;
import com.cobo.waas2.model.TransactionMessageSignEIP712Destination;
import com.cobo.waas2.model.TransactionRawMessageSignDestination;
import com.cobo.waas2.model.TransactionSolContractDestination;
import com.cobo.waas2.model.TransactionSolContractInstruction;
import com.cobo.waas2.model.TransactionTransferToAddressDestination;
import com.cobo.waas2.model.TransactionTransferToAddressDestinationAccountOutput;
import com.cobo.waas2.model.TransactionTransferToAddressDestinationUtxoOutputsInner;
import com.cobo.waas2.model.TransactionTransferToWalletDestination;
import com.cobo.waas2.model.WalletSubtype;
import com.cobo.waas2.model.WalletType;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for TransactionDestination
 */
public class TransactionDestinationTest {
    private final TransactionDestination model = new TransactionDestination();

    /**
     * Model tests for TransactionDestination
     */
    @Test
    public void testTransactionDestination() {
        // TODO: test TransactionDestination
    }

    /**
     * Test the property 'destinationType'
     */
    @Test
    public void destinationTypeTest() {
        // TODO: test destinationType
    }

    /**
     * Test the property 'accountOutput'
     */
    @Test
    public void accountOutputTest() {
        // TODO: test accountOutput
    }

    /**
     * Test the property 'utxoOutputs'
     */
    @Test
    public void utxoOutputsTest() {
        // TODO: test utxoOutputs
    }

    /**
     * Test the property 'changeAddress'
     */
    @Test
    public void changeAddressTest() {
        // TODO: test changeAddress
    }

    /**
     * Test the property 'forceInternal'
     */
    @Test
    public void forceInternalTest() {
        // TODO: test forceInternal
    }

    /**
     * Test the property 'forceExternal'
     */
    @Test
    public void forceExternalTest() {
        // TODO: test forceExternal
    }

    /**
     * Test the property 'walletId'
     */
    @Test
    public void walletIdTest() {
        // TODO: test walletId
    }

    /**
     * Test the property 'tradingAccountType'
     */
    @Test
    public void tradingAccountTypeTest() {
        // TODO: test tradingAccountType
    }

    /**
     * Test the property 'exchangeId'
     */
    @Test
    public void exchangeIdTest() {
        // TODO: test exchangeId
    }

    /**
     * Test the property 'amount'
     */
    @Test
    public void amountTest() {
        // TODO: test amount
    }

    /**
     * Test the property 'address'
     */
    @Test
    public void addressTest() {
        // TODO: test address
    }

    /**
     * Test the property 'value'
     */
    @Test
    public void valueTest() {
        // TODO: test value
    }

    /**
     * Test the property 'calldata'
     */
    @Test
    public void calldataTest() {
        // TODO: test calldata
    }

    /**
     * Test the property 'calldataInfo'
     */
    @Test
    public void calldataInfoTest() {
        // TODO: test calldataInfo
    }

    /**
     * Test the property 'instructions'
     */
    @Test
    public void instructionsTest() {
        // TODO: test instructions
    }

    /**
     * Test the property 'message'
     */
    @Test
    public void messageTest() {
        // TODO: test message
    }

    /**
     * Test the property 'structuredData'
     */
    @Test
    public void structuredDataTest() {
        // TODO: test structuredData
    }

    /**
     * Test the property 'msgHash'
     */
    @Test
    public void msgHashTest() {
        // TODO: test msgHash
    }

    /**
     * Test the property 'walletType'
     */
    @Test
    public void walletTypeTest() {
        // TODO: test walletType
    }

    /**
     * Test the property 'walletSubtype'
     */
    @Test
    public void walletSubtypeTest() {
        // TODO: test walletSubtype
    }

    /**
     * Test the property 'memo'
     */
    @Test
    public void memoTest() {
        // TODO: test memo
    }

    /**
     * Test the property 'txInfo'
     */
    @Test
    public void txInfoTest() {
        // TODO: test txInfo
    }

}
